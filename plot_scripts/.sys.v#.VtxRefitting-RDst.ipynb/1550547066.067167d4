{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import ROOT as rt\n",
    "import root_numpy as rtnp\n",
    "import numpy as np\n",
    "from histo_utilities import create_TH1D, create_TH2D, std_color_list, EstimateDispersion\n",
    "\n",
    "import CMS_lumi, tdrstyle\n",
    "tdrstyle.setTDRStyle()\n",
    "CMS_lumi.writeExtraText = 1\n",
    "CMS_lumi.extraText = \"     Simulation Preliminary\"\n",
    "\n",
    "donotdelete = []"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "fpath = {}\n",
    "tree = {}\n",
    "process = {}\n",
    "process_short = {}\n",
    "\n",
    "fpath['mu'] = '../data/cmsMC_private/BPH_Tag-Bm_D0kpmunu_Probe-B0_MuNuDmst-pD0bar-kp-_NoPU_10-2-3_v1/BPH_Tag-Bm_D0kpmunu_Probe-B0_MuNuDmst-pD0bar-kp-_BPHRDntuplizer_merged_1-300.root'\n",
    "process['mu'] = 'B_{0} #rightarrow D*^{-}(#bar{D}_{0}(K^{+}#pi^{-})#pi^{-})#mu^{+}#nu'\n",
    "process_short['mu'] = 'B #rightarrow D*#mu#nu'\n",
    "\n",
    "fpath['tau'] = '../data/cmsMC_private/BPH_Tag-Bm_D0kpmunu_Probe-B0_TauNuDmst-pD0bar-kp-tau2mununu_NoPU_10-2-3_v0/BPH_Tag-Bm_D0kpmunu_Probe-B0_TauNuDmst-pD0bar-kp-tau2mununu_BPHRDntuplizer_merged_1-300.root'\n",
    "process['tau'] = 'B_{0} #rightarrow D*^{-}(#bar{D}_{0}(K^{+}#pi^{-})#pi^{-})#tau^{+}(#mu^{+}#nu#bar{#nu})#nu'\n",
    "process_short['tau'] = 'B #rightarrow D*#tau#nu'\n",
    "\n",
    "# fpath['Dst_mu'] = '../data/cmsMC_private/BPH_Tag-Bm_D0kpmunu_Probe-Bp_D0stkpNeumunu_NoPU_10-2-3_v0/BPH_Tag-Bm_D0kpmunu_Probe-Bp_D0stkpNeumunu_BPHMC_merged.root'\n",
    "# process['Dst_mu'] = 'B^{+} #rightarrow #bar{D}^{*}_{0}(D_{0} n#gamma)#mu^{+}#nu'\n",
    "\n",
    "# fpath['Dst_tau'] = '../data/cmsMC_private/BPH_Tag-Bm_D0kpmunu_Probe-Bp_D0stkpNeutaunu_tau2mununu_NoPU_10-2-3_v0/BPH_Tag-Bm_D0kpmunu_Probe-Bp_D0stkpNeutaunu_tau2mununu_BPHMC_merged.root'\n",
    "# process['Dst_tau'] = 'B^{+} #rightarrow #bar{D}^{*}_{0}(D_{0} n#gamma)#tau^{+}(#mu^{+}#nu#nu)#nu'\n",
    "\n",
    "for k,v in fpath.iteritems():\n",
    "    tree[k] = rtnp.root2array(v)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "DecayChannelBr = {}\n",
    "DecayChannelBr['mu'] = 4.88e-2 * 67e-2 * 3.89e-2\n",
    "DecayChannelBr['tau'] = 1.67e-2 * 17.39e-2 * 67e-2 * 3.89e-2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'mu': 0.9438317596679413, 'tau': 0.05616824033205858}\n"
     ]
    }
   ],
   "source": [
    "weights = {}\n",
    "\n",
    "sumBr = np.sum(np.array(DecayChannelBr.values()))\n",
    "for k,v in DecayChannelBr.iteritems():\n",
    "    weights[k] = v/sumBr\n",
    "    \n",
    "print weights"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# D0 mass recostruction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Info in <TCanvas::Print>: png file ../fig/1902_1/D0mass_refit_B2mu.png has been created\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "n = 'mu'\n",
    "binning = [100, 1.5, 2.]\n",
    "\n",
    "leg = rt.TLegend(0.2,0.7,0.7,0.93, process[n])\n",
    "leg.SetTextFont(42)\n",
    "leg.SetTextAlign(12)\n",
    "leg.SetLineWidth(0)\n",
    "leg.SetBorderSize(0)\n",
    "leg.GetListOfPrimitives().First().SetTextAlign(22) \n",
    "\n",
    "h_pre = create_TH1D(tree[n]['D0prefit_mass'], name='h_'+n+'_D0mass_pre', binning=binning, axis_title=['D_{0} mass [GeV]', 'Prob / {:.1f} GeV'.format(binning[2]/binning[0])])\n",
    "h_pre.Scale(1./h_pre.GetEntries())\n",
    "d, e = EstimateDispersion(tree[n]['D0prefit_mass'])\n",
    "leg.AddEntry(h_pre, 'Raw PF cand, M: {:.3f}, S:{:.3f}'.format(h_pre.GetMean(), d), 'le')\n",
    "\n",
    "h_post = create_TH1D(tree[n]['D0reco_mass'], name='h_'+n+'_D0mass_post', binning=binning)\n",
    "h_post.Scale(1./h_post.GetEntries())\n",
    "h_post.SetLineColor(2)\n",
    "d, e = EstimateDispersion(tree[n]['D0reco_mass'])\n",
    "leg.AddEntry(h_post, 'Kin fit, M: {:.3f}, S:{:.3f}'.format(h_post.GetMean(), d), 'le')\n",
    "\n",
    "c = rt.TCanvas('c_'+n+'_pt', 'c_'+n+'_pt',50,50,800,600)\n",
    "c.SetTickx(0)\n",
    "c.SetTicky(0)\n",
    "\n",
    "h_pre.Draw()\n",
    "h_post.Draw('SAME')\n",
    "leg.Draw()\n",
    "\n",
    "h_pre.GetYaxis().SetRangeUser(0, 1.3*h_pre.GetMaximum())\n",
    "\n",
    "ln = rt.TLine()\n",
    "ln.SetLineStyle(9)\n",
    "ln.SetLineColor(6)\n",
    "ln.SetLineWidth(2)\n",
    "ln.DrawLine(1.86484, 0, 1.86484, h_pre.GetMaximum())\n",
    "\n",
    "CMS_lumi.CMS_lumi(c, -1, 0)\n",
    "c.Draw()\n",
    "donotdelete.append([leg, h_pre, h_post, c])\n",
    "c.SaveAs('../fig/1902_1/D0mass_refit_B2'+n+'.png')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# $D^{*-}$ mass recostruction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning in <TROOT::Append>: Replacing existing TH1: h_mu_Dstmass_pre (Potential memory leak).\n",
      "Warning in <TROOT::Append>: Replacing existing TH1: h_mu_Dstmass_post (Potential memory leak).\n",
      "Warning in <TCanvas::Constructor>: Deleting canvas with same name: c_mu_Dstmass\n",
      "Info in <TCanvas::Print>: png file ../fig/1902_1/Dstmass_refit_B2mu.png has been created\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "n = 'mu'\n",
    "binning = [100, 1.8, 2.1]\n",
    "\n",
    "leg = rt.TLegend(0.18,0.7,0.6,0.93, process[n])\n",
    "leg.SetTextFont(42)\n",
    "leg.SetTextAlign(12)\n",
    "leg.SetLineWidth(0)\n",
    "leg.SetBorderSize(0)\n",
    "leg.GetListOfPrimitives().First().SetTextAlign(22) \n",
    "\n",
    "h_pre = create_TH1D(tree[n]['Dstprefit_mass'], name='h_'+n+'_Dstmass_pre', binning=binning, axis_title=['D*^{-} mass [GeV]', 'Prob / {:.1f} GeV'.format(binning[2]/binning[0])])\n",
    "h_pre.Scale(1./h_pre.GetEntries())\n",
    "d, e = EstimateDispersion(tree[n]['Dstprefit_mass'])\n",
    "leg.AddEntry(h_pre, 'Raw PF cand, M: {:.3f}, S:{:.3f}'.format(h_pre.GetMean(), d), 'le')\n",
    "\n",
    "h_post = create_TH1D(tree[n]['Dstreco_mass'], name='h_'+n+'_Dstmass_post', binning=binning)\n",
    "h_post.Scale(1./h_post.GetEntries())\n",
    "h_post.SetLineColor(2)\n",
    "d, e = EstimateDispersion(tree[n]['Dstreco_mass'])\n",
    "leg.AddEntry(h_post, 'Kin fit (D0 mass), M: {:.3f}, S:{:.3f}'.format(h_post.GetMean(), d), 'le')\n",
    "\n",
    "c = rt.TCanvas('c_'+n+'_Dstmass', 'c_'+n+'_Dstmass',50,50,800,600)\n",
    "c.SetTickx(0)\n",
    "c.SetTicky(0)\n",
    "\n",
    "h_pre.Draw()\n",
    "h_post.Draw('SAME')\n",
    "leg.Draw()\n",
    "\n",
    "h_pre.GetYaxis().SetRangeUser(0, 1.2*np.max([h_pre.GetMaximum(), h_post.GetMaximum()]))\n",
    "\n",
    "ln = rt.TLine()\n",
    "ln.SetLineStyle(9)\n",
    "ln.SetLineColor(6)\n",
    "ln.SetLineWidth(2)\n",
    "ln.DrawLine(2.01027, 0, 2.01027, h_pre.GetMaximum())\n",
    "\n",
    "CMS_lumi.CMS_lumi(c, -1, 0)\n",
    "c.Draw()\n",
    "donotdelete.append([leg, h_pre, h_post, c])\n",
    "c.SaveAs('../fig/1902_1/Dstmass_refit_B2'+n+'.png')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Muon IP"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning in <TROOT::Append>: Replacing existing TH1: h_ip_mu (Potential memory leak).\n",
      "Warning in <TROOT::Append>: Replacing existing TH1: h_ip_tau (Potential memory leak).\n",
      "Warning in <TCanvas::Constructor>: Deleting canvas with same name: c_mu_Dstmass\n",
      "Info in <TCanvas::Print>: png file ../fig/1902_1/IP_mu_tauVSmu.png has been created\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "binning = [20, 0, 0.5]\n",
    "\n",
    "leg = rt.TLegend(0.5,0.7,0.9,0.93)\n",
    "leg.SetTextFont(42)\n",
    "leg.SetTextAlign(12)\n",
    "leg.SetLineWidth(0)\n",
    "leg.SetBorderSize(0)\n",
    "\n",
    "h_mu = create_TH1D(tree['mu']['ip_mu_RECO'], name='h_ip_mu', binning=binning, axis_title=['IP #mu [mm]', 'Prob / {:.3f} mm'.format(binning[2]/binning[0])])\n",
    "h_mu.Scale(1./h_mu.GetEntries())\n",
    "h_mu.SetLineColor(4)\n",
    "f_mu = rt.TF1('f_mu','expo', binning[1], binning[2])\n",
    "f_mu.SetLineColor(4)\n",
    "f_mu.SetLineStyle(9)\n",
    "h_mu.Fit(f_mu, 'LQ')\n",
    "leg.AddEntry(h_mu, 'B#rightarrow D*#mu#nu', 'le')\n",
    "\n",
    "h_tau = create_TH1D(tree['tau']['ip_mu_RECO'], name='h_ip_tau', binning=binning)\n",
    "h_tau.Scale(1./h_tau.GetEntries())\n",
    "h_tau.SetLineColor(2)\n",
    "f_tau = rt.TF1('f_tau','expo', binning[1], binning[2])\n",
    "f_tau.SetLineColor(2)\n",
    "f_tau.SetLineStyle(9)\n",
    "h_tau.Fit(f_tau, 'LQ')\n",
    "leg.AddEntry(h_tau, 'B#rightarrow D*#tau#nu', 'le')\n",
    "\n",
    "c = rt.TCanvas('c_'+n+'_Dstmass', 'c_'+n+'_Dstmass',50,50,800,600)\n",
    "c.SetTickx(0)\n",
    "c.SetTicky(0)\n",
    "\n",
    "h_mu.Draw()\n",
    "h_tau.Draw('SAME')\n",
    "leg.Draw()\n",
    "\n",
    "h_pre.GetYaxis().SetRangeUser(0, 1.2*np.max([h_tau.GetMaximum(), h_mu.GetMaximum()]))\n",
    "\n",
    "CMS_lumi.CMS_lumi(c, -1, 0)\n",
    "c.SetLogy()\n",
    "c.Draw()\n",
    "donotdelete.append([leg, h_pre, h_post, c])\n",
    "c.SaveAs('../fig/1902_1/IP_mu_tauVSmu.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.14"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
